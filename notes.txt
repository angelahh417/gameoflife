    vec = [vec1, vec2, vec3]
        = [
    (vec1)  [Cell1, Cell2, Cell3, Cell4, Cell5, Cell6],
    (vec2)  [Cell7, Cell8, Cell, Cell, Cell, Cell],
    (vec3)  [Cell20, Cell, Cell, Cell, Cell, Cell],

        ]

    vec[2][0] = Cell20




    good
    . . . . . .
    . . . . . .
    . . . . . .

    bad
    . . .
    . . .
    . . .
    . . .
    . . .
    . . .





& = reference
we are passing by reference, not value
void initGameBoard(vector<vector<Cell>> &vec) { 
    for (int i = 0; i < HEIGHT; i++) {
        vector<Cell> v1;
        
        for (int j = 0; j < WIDTH; j++) {
            v1.push_back(Cell());
        }
        vec.push_back(v1);

    }
}

pass by value
vec is a new vector that is copied from the caller's vector
when this method ends, vec gets garbage collected and any changes to it are gone
the original vector never was changed becasue vec is just a copy of its values
void initGameBoard2(vector<Cell> vec) {
    // ...
}




; = current element
- = neighbours to check
. . - - - .
. . - ; - .
. . - - - .



                              
     @   @@@                  
     @@@  @                   
      @                       
                              
                